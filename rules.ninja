# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.17

# This file contains all the rules used to get the outputs files
# built from the input files.
# It is included in the main 'build.ninja'.

# =============================================================================
# Project: Models
# Configurations: Release
# =============================================================================
# =============================================================================

#############################################
# Rule for running custom commands.

rule CUSTOM_COMMAND
  command = $COMMAND
  description = $DESC


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Autoencoder1D_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__Autoencoder1D_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Autoencoder2D_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__Autoencoder2D_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__VariationalAutoencoder1D_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__VariationalAutoencoder1D_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__ModelSupport_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__ModelSupport_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling C files.

rule C_COMPILER__STBImage_Release
  depfile = $DEP_FILE
  deps = gcc
  command = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out   -c $in
  description = Building C object $out


#############################################
# Rule for linking C static library.

rule C_STATIC_LIBRARY_LINKER__STBImage_Release
  command = $PRE_LINK && /usr/local/Cellar/cmake/3.17.2/bin/cmake -E rm -f $TARGET_FILE && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar qc $TARGET_FILE $LINK_FLAGS $in && /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib $TARGET_FILE && /usr/local/Cellar/cmake/3.17.2/bin/cmake -E touch $TARGET_FILE && $POST_BUILD
  description = Linking C static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Checkpoints_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__Checkpoints_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Datasets_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__Datasets_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__ImageClassificationModels_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__ImageClassificationModels_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__RecommendationModels_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__RecommendationModels_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__TextModels_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__TextModels_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__MiniGo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__MiniGo_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__MiniGoDemo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__MiniGoDemo_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__GAN_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__GAN_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__DCGAN_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__DCGAN_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__FastStyleTransfer_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__FastStyleTransfer_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__FastStyleTransferDemo_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__FastStyleTransferDemo_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Custom-CIFAR10_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__Custom-CIFAR10_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__ResNet-CIFAR10_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__ResNet-CIFAR10_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__LeNet-MNIST_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__LeNet-MNIST_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__MobileNetV1-Imagenette_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__MobileNetV1-Imagenette_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__MobileNetV2-Imagenette_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__MobileNetV2-Imagenette_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Regression-BostonHousing_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__Regression-BostonHousing_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__BERT-CoLA_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__BERT-CoLA_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__GPT2-WikiText2_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__GPT2-WikiText2_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__NeuMF-MovieLens_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__NeuMF-MovieLens_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__GPT2InferenceUI_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__GPT2InferenceUI_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__GPT2Inference_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__GPT2Inference_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__WordSeg_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__WordSeg_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__Fractals_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__Fractals_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__VGG-Imagewoof_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift executable.

rule Swift_EXECUTABLE_LINKER__VGG-Imagewoof_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-executable -o $TARGET_FILE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift executable $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for compiling Swift files.

rule Swift_COMPILER__TrainingLoop_Release
  depfile = $DEP_FILE
  deps = gcc
  command = :
  description = Building Swift object $out


#############################################
# Rule for linking Swift static library.

rule Swift_STATIC_LIBRARY_LINKER__TrainingLoop_Release
  command = $PRE_LINK && /usr/bin/swiftc -output-file-map $SWIFT_OUTPUT_FILE_MAP -incremental -j 8 -emit-library -static -o $TARGET_FILE -module-name $SWIFT_MODULE_NAME -module-link-name $SWIFT_LIBRARY_NAME -emit-module -emit-module-path $SWIFT_MODULE -emit-dependencies $DEFINES $FLAGS $INCLUDES $SWIFT_SOURCES $LINK_FLAGS $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
  description = Linking Swift static library $TARGET_FILE
  restat = $RESTAT


#############################################
# Rule for re-running cmake.

rule RERUN_CMAKE
  command = /usr/local/Cellar/cmake/3.17.2/bin/cmake --regenerate-during-build -S/Users/ayush517/swift-models -B/Users/ayush517/swift-models
  description = Re-running CMake...
  generator = 1


#############################################
# Rule for cleaning all built files.

rule CLEAN
  command = /usr/local/bin/ninja $FILE_ARG -t clean $TARGETS
  description = Cleaning all built files...


#############################################
# Rule for printing all primary targets available.

rule HELP
  command = /usr/local/bin/ninja -t targets
  description = All primary targets available:

